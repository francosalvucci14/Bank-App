/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bankUI;

import static bankUI.BankUI.fh;
import static bankUI.BankUI.log;
import static bankUI.BankUI.dbUrl;

import java.awt.AWTException;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.*;
//for pdf
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.net.URL;
import java.text.DecimalFormat;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author FSalvucci
 */
public class ShowUser extends javax.swing.JFrame {

    /**
     * Creates new form ShowUser
     */
    /*public static Logger log;
    public static FileHandler fh;*/
    public ShowUser() throws IOException {
        initComponents();
        boolean appender = true;
       // Logger log;
        //fh = new FileHandler("Log\\BankGUI.log",appender);
        log = Logger.getLogger(ShowUser.class.getName());
        log.addHandler(fh);
        SimpleFormatter formatter = new SimpleFormatter();	
	fh.setFormatter(formatter);
        
        try {           
            Class.forName("com.mysql.cj.jdbc.Driver");
        }catch(ClassNotFoundException e){                     
           jTextArea1.setText(e.getLocalizedMessage());
            log.warning("---ShowUser -> Exception : " + e.getLocalizedMessage() + "\n");
        }
        op2();
        URL image = getClass().getResource("bank.png");
        ImageIcon img = new ImageIcon(image);
        this.setIconImage(img.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser2 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jFileChooser1.setAcceptAllFileFilterUsed(false);
        jFileChooser1.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        jFileChooser1.setCurrentDirectory(new java.io.File("C:\\Users\\franc\\source\\repos\\Java\\Bank GUI"));
        jFileChooser1.setDialogTitle("Save export as txt...");

        jFileChooser2.setAcceptAllFileFilterUsed(false);
        jFileChooser2.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        jFileChooser2.setCurrentDirectory(new java.io.File("C:\\Users\\franc\\source\\repos\\Java\\Bank GUI"));
        jFileChooser2.setDialogTitle("Save export as pdf...");

        setTitle("Show user data");
        setResizable(false);
        setSize(new java.awt.Dimension(300, 700));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("User : "));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Error"));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        jButton1.setText("Export to txt...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Export(evt);
            }
        });

        jButton2.setMnemonic('E');
        jButton2.setText("Export to pdf...");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportPDF(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Export(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Export
        // TODO add your handling code here:
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TXT (*.txt)", "txt");
        jFileChooser1.addChoosableFileFilter(filter);
        //jFileChooser1.showOpenDialog(null);
       // Object export = CalculateTotal();
        //String exp = String.valueOf(export);
        if(evt.getSource() == jButton1){
            int returnVal = jFileChooser1.showOpenDialog(ShowUser.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = jFileChooser1.getSelectedFile();
                PrintWriter pw = null;
                log.info("Choosed file : " + file);
                try {
                    //This is where a real application would open the file.
                    pw = new PrintWriter(file);
                    log.info("Start creation of txt export " );
                    for (int row = 0; row < jTable1.getRowCount(); row++) {
                        for (int col = 0; col < jTable1.getColumnCount(); col++) {
                            pw.print(jTable1.getColumnName(col));
                            pw.print(": ");
                            pw.println(jTable1.getValueAt(row, col));
                            if(jTable1.getColumnName(col).equals("Credit")){
                                pw.println("------");
                            }
                        }
                    }
                    log.info("Export saved successfully");
                    //pw.println(exp);
                    pw.flush();
                    pw.close();
                    BankUI.infoBox("Save export as txt", "TXT - Export");
                    //pw.println(export);
                    //pw.close();
                    log.info("Save export as : " + file.getName());
                } catch (IOException ex) {
                    log.warning("---ShowUser -> Exception : " + ex.getLocalizedMessage());
                }
            } else {
                log.severe("Open command cancelled by user.");
            }
        }
    }//GEN-LAST:event_Export

    private void ExportPDF(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportPDF
        // TODO add your handling code here:
        //export to pdf with table
        //String filename = "";
       // String exportpdf = jTextArea2.getText();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PDF (*.pdf)", "pdf");
        jFileChooser2.addChoosableFileFilter(filter);
        if(evt.getSource() == jButton2){
            int returnVal = jFileChooser2.showOpenDialog(ShowUser.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = jFileChooser2.getSelectedFile();
                //String filename = file.getName();
                log.info("Choosed file : " + file);
                //PrintWriter pw = null;
                try {
                    //This is where a real application would open the file.
                   // pw = new PrintWriter(file);
                    String dir = file.getCanonicalPath();
                    //String DIR = readFile(dir);
                    //da sistemare e poi metere
                    log.info("Start creation of pdf export " );
                    createPDF(dir);
                    
                    //BankUI.infoBox("Work in progress...", "PDF - Export");
                    log.info("Save export as : " + file.getName());
                } catch (IOException ex) {
                    log.warning("---ShowUser -> Exception : " + ex.getLocalizedMessage());
                    BankUI.errorBox("Exception : " + ex.toString(), "Error");
                }
                BankUI.infoBox("Save export as pdf", "PDF - Export");
            } else {
                log.info("Open command cancelled by user.");
            }
        }
    }//GEN-LAST:event_ExportPDF
   
    /**
     * @param args the command line arguments
     */
    private static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ShowUser().setVisible(true);
                } catch (IOException ex) {
                    log.warning("---ShowUser -> Exception : " + ex.getLocalizedMessage() + "\n");
                }
            }
        });
    }
    public static void createPDF(String directory) { 
        Document doc = new Document();
        PdfWriter docWriter = null;
         DecimalFormat df = new DecimalFormat("0.00");
         
        try {
   
            int count = jTable1.getRowCount();
            //file path
            String path =  directory;
            docWriter = PdfWriter.getInstance(doc , new FileOutputStream(path));
            // writer = PdfWriter.getInstance(document, new
            //document header attributes
            doc.addAuthor("FSalvucci");
            doc.addCreationDate();
            doc.addProducer();
            doc.addSubject("BankUI User Export");
            //doc.addCreator("MySampleCode.com");
            doc.addTitle("BankUIExportUser");
            doc.setPageSize(PageSize.LETTER);

            //open document
            doc.open();
            PdfPTable tab=new PdfPTable(4);
            tab.addCell("UID");
            tab.addCell("User");
            tab.addCell("AccountNumber");
            tab.addCell("Credit");
            
            for(int i = 0; i<count; i++){
                Object o1 = GetData(jTable1,i,0);
                Object o2 = GetData(jTable1,i,1);
                Object o3 = GetData(jTable1,i,2);
                Object o4 = GetData(jTable1,i,3);
                
                String val1 = o1.toString();
                String val2 = o2.toString();
                String val3 = o3.toString();
                String val4 = o4.toString();
                tab.addCell(val1);
                tab.addCell(val2);
                tab.addCell(val3);
                tab.addCell(val4);
            }
            doc.add(tab);

            // step 5: we close the document
            doc.close();

       }catch (DocumentException dex)
        {
           jTextArea1.append(dex.getLocalizedMessage());
           log.warning("---ShowUser -> Exception : " + dex.getLocalizedMessage() + "\n");
           BankUI.errorBox("Exception : " + dex.toString(), "Error");
        }
        catch (Exception ex)
        {
         jTextArea1.append(ex.getLocalizedMessage());
         log.warning("---ShowUser -> Exception : " + ex.getLocalizedMessage() + "\n");
         BankUI.errorBox("Exception : " + ex.toString(), "Error");
        }
        finally
        {
         if (doc != null){
          //close the document
             doc.close();
         }
         if (docWriter != null){
          //close the writer
          docWriter.close();
         }
        }    
    }
    public static Object GetData(JTable table, int row_index, int col_index){
        return table.getModel().getValueAt(row_index, col_index);
    }
    private static void op2() throws AWTException{
        Connection con = null;
        DefaultTableModel model = new DefaultTableModel();
        jTable1.setModel(model); 
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable1.setFillsViewportHeight(true);
        try{
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/BankApp","root",""); //+dbUrl+
            System.out.println("jdbc:mysql://localhost:3306/BankApp");
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery("select * from utenti inner join credito on utenti.UID = credito.UserID");
            String uid,user;
            int an,credit;
            model.addColumn("UID");
            model.addColumn("User");
            model.addColumn("AccountNumber");
            model.addColumn("Credit");
            while (rs.next()) {
		//jTextArea2.append("UserID : " + rs.getString("UID") + " | " + " Username : " + rs.getString("User") + " | " + " AccountNumber : " + rs.getInt("NConto") + " | " + " Credit : " + rs.getInt("Credito") + "\n");
                uid = rs.getString("UID");
                user = rs.getString("User");
                an = rs.getInt("NConto");
                credit = rs.getInt("Credito");
                model.addRow(new Object[]{uid, user, an, credit});
                
            }
        }catch(SQLException e){
            jTextArea1.setText(e.getMessage());
            log.warning("---ShowUser -> Exception : " + e.getLocalizedMessage() + "\n");
            BankUI.errorBox("Exception : " + e.toString(), "Error");
            BankUI.notification("Show User", "Except : " + e.toString(), "Error");
        }finally {
          try{
              if (con != null){
                 con.close();   
              }
          }catch(SQLException e){
             jTextArea1.setText(e.getMessage());
             log.warning("---ShowUser -> Exception : " + e.getLocalizedMessage() + "\n");
             BankUI.errorBox("Exception : " + e.toString(), "Error");
             BankUI.notification("Show User", "Except : " + e.toString(), "Error");
          }
      }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFileChooser jFileChooser1;
    private static javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JTable jTable1;
    private static javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
