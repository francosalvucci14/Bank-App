/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bankUI;
import static bankUI.BankUI.fh;
import static bankUI.BankUI.log;
import java.awt.AWTException;
import java.awt.Color;
import java.io.IOException;
import java.net.URL;
import java.sql.*;
import java.util.Random;
import java.util.logging.*;
import javax.swing.ImageIcon;
import org.apache.commons.lang.RandomStringUtils;
//import oracle.jdbc.driver.OracleDriver;
/**
 *
 * @author FSalvucci
 */
public class NewAccount extends javax.swing.JFrame {

    /**
     * Creates new form NewAccount
     */
    //public static Logger log;
    //public static FileHandler fh;
    public NewAccount() throws IOException {
        initComponents();
        
       // fh = new FileHandler("Log\\BankGUI.log",true);
        log = Logger.getLogger(NewAccount.class.getName());
        log.addHandler(fh);
        SimpleFormatter formatter = new SimpleFormatter();	
	fh.setFormatter(formatter);
        try {           
            Class.forName("com.mysql.cj.jdbc.Driver");
        }catch(ClassNotFoundException e){                     
            jTextArea1.setText(e.getLocalizedMessage());
            log.warning("--- New Account -> Exception : " + e.getLocalizedMessage());
            
        }
        jTextArea3.append("*****REGISTER NEW ACCOUNT****\n");
        URL image = getClass().getResource("bank.png");
        ImageIcon img = new ImageIcon(image);
        this.setIconImage(img.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();

        jLabel1.setText("jLabel1");

        setTitle("Create a new account");
        setResizable(false);
        setSize(new java.awt.Dimension(700, 300));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("New Account Registration"));

        jLabel2.setText("Username");

        jLabel3.setText("Credit : ");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Error"));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel4.setText("Password");

        jButton1.setText("Add Account");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("New Account Info"));

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("frame");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        log.info("---NewAccount -> Add Account ->");
        
        try {
            op1();
        } catch (AWTException ex) {
            log.severe("--NewAccount -> Exception : " + ex.getLocalizedMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    @SuppressWarnings("Convert2Lambda")
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @SuppressWarnings("override")
            public void run() {
               
                try {
                    new NewAccount().setVisible(true);
                } catch (IOException ex) {
                    log.warning("---NewAccount -> Exception : " + ex.getLocalizedMessage());
                }
            }
        });
        
        
        //op1(con);
        
    }
    @SuppressWarnings("LoggerStringConcat")
    private static void op1() throws AWTException {
        jTextArea1.setText("");  
        jTextArea3.setText("");  
        jTextArea3.setForeground(null);
        
        /*connection variable declaraion */
        jTextArea1.setForeground(null);
        Connection con = null;
        PreparedStatement p = null;
        PreparedStatement pCredito = null;
        PreparedStatement stmnt = null;
        PreparedStatement stmnt2 = null;
        ResultSet rs2 = null;
        ResultSet rs = null;
        //end declaration vairables
     //random conto number
       
        int conto =  CreateAccountNumber();
      try{
        con=DriverManager.getConnection("jdbc:mysql://localhost:3306/BankApp","root","");  
        //here sonoo is database name, root is username and password  
        //Statement stm = con.createStatement();
        p = con.prepareStatement("insert into utenti(UID,User,Pass,NConto) values (?,?,?,?)");
        pCredito = con.prepareStatement("insert into credito(CID,UserID,Credito) values (?,?,?)");
        //Scanner s1 = new Scanner(System.in);
        //String account;
        String user,pass;
        String StringCredit;
        int credit = 0;       
        user = jTextField1.getText();     
        pass = jPasswordField1.getText();        
        StringCredit = jTextField2.getText();
        jTextArea3.append("Check Data...\n");  
        log.info("---NewAccount -> Check Data...");
        if(user.isEmpty() || pass.isEmpty()){
            jTextArea3.setForeground(Color.RED);
            jTextArea1.setForeground(Color.RED);
            jTextArea3.append("Error...\n");
            jTextArea1.append("Error : Insert Username or Password and try again"); 
            log.warning("---NewAccount -> Error : Insert Username or Password and try again");
            /*user = jTextField1.getText();            
            pass = jPasswordField1.getText();           
            StringCredit = jTextField2.getText();*/
        }else{
            String search ="Select * From utenti where User= ? and Pass =?";
            String search2 ="Select * From utenti where User= ?";
            stmnt = con.prepareStatement(search);
            stmnt.setString(1, user);
            stmnt.setString(2, pass);
            rs = stmnt.executeQuery();
            boolean val = rs.next();//next() returns false if there are no-rows retrieved 
            
          if(val){
              jTextArea3.setForeground(Color.RED);
            jTextArea1.setForeground(Color.RED);
              jTextArea3.append("Error...\n");
            jTextArea1.append("Error : Account already exists\nTry again");  
            log.warning("---NewAccount -> Error : Account already exists\nTry again");

             val = rs.next();
             
            }else{
              
                 p.setNull(1, 0);
                p.setString(2,user);
                p.setString(3, pass);
                p.setInt(4,conto);               
                try{
                    credit = Integer.parseInt(StringCredit);
                    if(credit == (int)credit){
                        jTextArea3.append("OK...\n");
                        log.info("---NewAccount -> OK...");
                        p.executeUpdate();
                        stmnt2 = con.prepareStatement(search2);
                        stmnt2.setString(1,user);
                        rs2 = stmnt2.executeQuery();
                        rs2.next();
                        //s.close();  
                        jTextArea3.append("Account entered correctly : " + user + "\n");  
                        log.info("---NewAccount -> Account entered correctly : " + user + "\n");  
                        int UserID = rs2.getInt("utenti.UID");
                        pCredito.setNull(1, 0);
                        pCredito.setInt(2,UserID);
                        pCredito.setInt(3, credit);
                        pCredito.executeUpdate(); 
                        BankUI.infoBox("---NewAccount -> Account entered correctly :)", "New Account");
                        BankUI.notification("Account", "You just created a new account, keep it up","Create new acocunt");
                    }
                    
                }catch(NumberFormatException ne){
                    //variable credit is not a number
                     jTextArea3.setForeground(Color.RED);
                    jTextArea1.setForeground(Color.RED);
                    jTextArea1.append("Error : Credit must be a number");
                    jTextArea3.append("Error...");
                    log.severe("---NewAccount -> Exception : " + ne.getMessage());                  
                }
          
          }
          
        }              
      }catch(SQLException e){
          jTextArea1.setText(e.getLocalizedMessage());
          log.warning("---NewAccount -> Exception : " + e.getLocalizedMessage());
      } finally {
          //rs
          try{
              if(rs != null){
                  rs.close();
              }
          }catch(SQLException ex){
              jTextArea1.setText(ex.getMessage());
              log.warning("---NewAccount -> Exception : " + ex.getLocalizedMessage());
          }
          //rs2
          try{
              if(rs2 != null){
                  rs2.close();
              }
          }catch(SQLException ex){
              jTextArea1.setText(ex.getMessage());
              log.warning("---NewAccount -> Exception : " + ex.getLocalizedMessage());
          }
          //stmnt2
          try{
              if(stmnt2 != null){
                  stmnt2.close();
              }
          }catch(SQLException ex){
              jTextArea1.setText(ex.getMessage());
              log.warning("---NewAccount -> Exception : " + ex.getLocalizedMessage());
          }
          //stmnt
          try{
              if(stmnt != null){
                  stmnt.close();
              }
          }catch(SQLException ex){
              jTextArea1.setText(ex.getMessage());
              log.warning("---NewAccount -> Exception : " + ex.getLocalizedMessage());
          }
          //pCredito
          try{
              if(pCredito != null){
                  pCredito.close();
              }
          }catch(SQLException ex){
              jTextArea1.setText(ex.getMessage());
              log.warning("---NewAccount -> Exception : " + ex.getLocalizedMessage());
          }
          //p
          try{
              if(p != null){
                  p.close();
              }
          }catch(SQLException ex){
              jTextArea1.setText(ex.getMessage());
              log.warning("---NewAccount -> Exception : " + ex.getLocalizedMessage());
          }
          //con
          try{
              if (con != null){
                 con.close();   
              }
          }catch(SQLException e){
              jTextArea1.setText(e.getMessage());
              log.warning("---NewAccount -> Exception : " + e.getLocalizedMessage());
          }
      }
    }
    private static int CreateAccountNumber(){
        //generate a 4 digit integer 1000 <10000
        int randomAccountNumber = (int)(Math.random()*9000)+1000;
        
        return randomAccountNumber;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private static javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private static javax.swing.JTextArea jTextArea1;
    private static javax.swing.JTextArea jTextArea3;
    private static javax.swing.JTextField jTextField1;
    private static javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
